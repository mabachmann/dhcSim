within dhcSim.DHC.Submodules.FourPortModules.DistrictHeating.Consumer;
model DH_HeatPumpConsumer
  "Four port model of district heating heat pump consumer model"
  // import dhcSim;
  extends Buildings.Fluid.Interfaces.TwoPortFlowResistanceParameters(
    final computeFlowResistance=(abs(dp_nominal) > Modelica.Constants.eps));
  extends
    dhcSim.DHC.Submodules.FourPortModules.Interfaces.FourPortModulesParameters;
  extends dhcSim.DHC.Submodules.FourPortModules.BaseClasses.BaseModule(final
      nSpl1=1, final nSpl2=1);
  extends dhcSim.DHC.Submodules.FourPortModules.BaseClasses.ExternalProfiles(
      QFlow_table(final y=max(loadTable.y[1]*ProfCtrl, 0.0)));
  extends
    dhcSim.DHC.Submodules.FourPortModules.BaseClasses.SupplyReturnTemperatures;

  Modelica.SIunits.Temperature TCon "Condenser temperature";

  // Efficiency
  parameter Real etaCarnot_nominal(unit="1")=0.3
    "Carnot effectiveness (=COP/COP_Carnot)"
    annotation (Dialog(group="Efficiency"));
  parameter dhcSim.Fluid.Types.OutletTemperature effInpEva=dhcSim.Fluid.Types.OutletTemperature.gradient
    "Define evaporator temperature"
    annotation (Dialog(group="Efficiency"), Evaluate=True);
  parameter Modelica.SIunits.Temperature TGrad(displayUnit="K")=6
    "Temperature gradient" annotation(Dialog(group="Efficiency", enable=effInpEva == dhcSim.Fluid.Types.OutletTemperature.gradient));

    // Heating curve
  parameter Boolean use_HeatingCurve=false "=true, to use heating curve";
  parameter Modelica.SIunits.Temperature TBuiSup=Medium.T_default
    "Supply temperature of building if use_HeatingCurve=false"
                                                              annotation(Dialog(enable=not use_HeatingCurve));

  // Other
  parameter Real ProfCtrl = 1 "Control parameter for profile usage";
  dhcSim.DHC.Submodules.TwoPortModules.Evaporator HP(
    use_Q_flow_in=true,
    redeclare final package Medium = Medium,
    final dp_nominal=dp_nominal,
    final m_flow_nominal=m_flow_nominal,
    final energyDynamics=energyDynamics,
    final T_start=T_start_1,
    final from_dp=from_dp,
    final deltaM=deltaM,
    final etaCarnot_nominal=etaCarnot_nominal,
    final allowFlowReversal=allowFlowReversal,
    final show_T=show_T,
    final tau=tau,
    final TGrad=TGrad,
    final effInpEva=effInpEva,
    final linearizeFlowResistance=linearizeFlowResistance,
    final m_flow_small=m_flow_small) annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=270,
        origin={0,0})));
  Modelica.Blocks.Interfaces.RealOutput dp_out(final quantity="Pressure",
      final unit="Pa") "Pressure difference of ideal source" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=270,
        origin={40,-110}),
                         iconTransformation(extent={{-10,-10},{10,10}},
        rotation=270,
        origin={0,-110})));
  Modelica.Blocks.Interfaces.RealOutput QEva_flow_out "Evaporator heat flow"
    annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=0,
        origin={110,30})));
  Modelica.Blocks.Interfaces.RealOutput P_out "Electrical power" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=0,
        origin={110,0})));
  Modelica.Blocks.Interfaces.RealOutput QCon_flow_out "Condensator heat flow"
    annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=0,
        origin={110,-30})));
  Modelica.Blocks.Sources.RealExpression TCon_Exp(y=TCon)
    annotation (Placement(transformation(extent={{-40,18},{-20,38}})));
equation
 if use_HeatingCurve==true then
    TCon = hotWatRes.TSup;
 else
   TCon = TBuiSup;
 end if;
  //W = HP.W;
  connect(QFlow_table.y, HP.QLoad_in)
    annotation (Line(points={{-19,0},{-13.5,0},{-8,0}}, color={0,0,127}));
  connect(HP.port_a, spl1[1].port_3) annotation (Line(points={{1.77636e-15,10},{
          0,10},{0,50}}, color={0,127,255}));
  connect(HP.port_b, spl2[1].port_3)
    annotation (Line(points={{0,-10},{0,-30},{0,-50}}, color={0,127,255}));
  connect(HP.dp_out, dp_out) annotation (Line(points={{-6,-11},{-6,-11},{-6,-40},
          {40,-40},{40,-110}},  color={0,0,127}));
  connect(HP.P_out, P_out)
    annotation (Line(points={{11,0},{110,0}}, color={0,0,127}));
  connect(HP.QEva_flow_out, QEva_flow_out) annotation (Line(points={{11,6},{60,
          6},{60,30},{110,30}}, color={0,0,127}));
  connect(HP.QCon_flow_out, QCon_flow_out) annotation (Line(points={{11,-6},{60,
          -6},{60,-30},{110,-30}}, color={0,0,127}));
  connect(TCon_Exp.y, HP.TCon_in) annotation (Line(points={{-19,28},{-16,28},{
          -16,7},{-8,7}}, color={0,0,127}));
  annotation (defaultComponentName="actHP", Icon(graphics={
        Rectangle(
          extent={{-25,-6},{25,6}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={255,0,0},
          fillPattern=FillPattern.Solid,
          origin={0,25},
          rotation=90),
        Rectangle(
          extent={{-25,6},{25,-6}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={0,0,255},
          fillPattern=FillPattern.Solid,
          origin={0,-25},
          rotation=90),
        Rectangle(
          extent={{-50,40},{50,-40}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={95,95,95},
          fillPattern=FillPattern.Solid),
                                Text(
          extent={{-50,30},{50,-50}},
          lineColor={0,0,0},
          textString="HP")}),
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
            100}})));
end DH_HeatPumpConsumer;
