within dhcSim.DHC.Submodules.FourPortModules.DistrictHeating.Producer;
model DH_PrescribedHpProducer
  "Four port model of prescribed district heating producer using heat pump and own pump module"
  extends Buildings.Fluid.Interfaces.TwoPortFlowResistanceParameters(
    final computeFlowResistance=(abs(dp_nominal) > Modelica.Constants.eps));
  extends
    dhcSim.DHC.Submodules.FourPortModules.Interfaces.FourPortModulesParameters;
  extends dhcSim.DHC.Submodules.FourPortModules.BaseClasses.BaseModule(final
      nSpl1=1, final nSpl2=1);
  extends
    dhcSim.DHC.Submodules.FourPortModules.BaseClasses.SupplyReturnTemperatures;
  extends dhcSim.DHC.Submodules.FourPortModules.BaseClasses.ExternalProfiles(
      QFlow_table(final y=QEva_flow), final columns={2,3,4});

  Modelica.SIunits.Temperature TCon(start=Medium.T_default) "Condenser temperature";
  Modelica.SIunits.Temperature TEva(start=Medium.T_default) "Evaporator temperature";
  Modelica.SIunits.HeatFlowRate QEva_flow(start=0) "Evaporator heat flow rate";
  Modelica.SIunits.Temperature TNetSup(start=Medium.T_default) "Supply temperature grid";

  parameter Boolean use_HeatingCurve=true "=true, to use heating curve";
  parameter Boolean use_VariableTEva=true "=true, use table value for evaporation temperature";
  parameter Boolean use_TemperatureProfile=false "=true, to use temperature profile of supply temperature on net side provided by loadTable" annotation(Dialog(enable=not use_HeatingCurve));

  parameter Modelica.SIunits.Temperature TEvaSet=Medium.T_default
    "Set temperature of condensator" annotation(Dialog(enable=not use_VariableTEva));

  // Temperature profile
  parameter Modelica.SIunits.Temperature TNetSupSet = 273.15 + 50 "Set supply temperature on net side" annotation(Dialog(enable=not use_HeatingCurve and not use_TemperatureProfile));

  // Efficiency
  parameter Real etaCarnot_nominal(unit="1")=0.5
    "Carnot effectiveness (=COP/COP_Carnot)"
    annotation (Dialog(group="Efficiency"));

  TwoPortModules.Condenser actPro(
    final allowFlowReversal=allowFlowReversal,
    final m_flow_nominal=m_flow_nominal,
    redeclare final package Medium = Medium,
    final use_Q_flow_in=true,
    final from_dp=from_dp,
    final deltaM=deltaM,
    final show_T=show_T,
    final energyDynamics=energyDynamics,
    final dp_nominal=dp_nominal,
    final tau=tau,
    final T_start=T_start_1,
    final linearizeFlowResistance=linearizeFlowResistance,
    final m_flow_small=m_flow_small,
    final effInpCon=dhcSim.Fluid.Types.OutletTemperature.prescribed,
    final use_TEva_in=true,
    final use_TCon_in=true,
    final etaCarnot_nominal=etaCarnot_nominal)                  annotation (Placement(
        transformation(
        extent={{-10,10},{10,-10}},
        rotation=90,
        origin={0,0})));
  Modelica.Blocks.Interfaces.RealOutput dp_out "Pressure drop" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={40,110})));

  Modelica.Blocks.Sources.RealExpression TCon_exp(y(unit="K") = TCon)
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=0,
        origin={-30,20})));
  Modelica.Blocks.Sources.RealExpression TEva_exp(y(unit="K") = TEva)
    annotation (Placement(transformation(extent={{-10,-10},{10,10}},
        rotation=0,
        origin={-30,-20})));
  Modelica.Blocks.Interfaces.RealOutput QEva_flow_out(unit="W") annotation (
      Placement(transformation(extent={{100,30},{120,50}}), iconTransformation(
          extent={{100,20},{120,40}})));
  Modelica.Blocks.Interfaces.RealOutput P_out(unit="W") annotation (Placement(
        transformation(extent={{100,-10},{120,10}}), iconTransformation(extent={
            {100,-10},{120,10}})));
  Modelica.Blocks.Interfaces.RealOutput QCon_flow_out(unit="W") annotation (
      Placement(transformation(extent={{100,-50},{120,-30}}),
        iconTransformation(extent={{100,-50},{120,-30}})));
equation
  if  use_HeatingCurve then
    TNetSup = hotWatRes.TSup;
  else
    if use_TemperatureProfile then
      TNetSup = loadTable.y[2];
    else
      TNetSup = TNetSupSet;
    end if;
  end if;

  if use_VariableTEva then
    TEva = loadTable.y[3];
  else
    TEva = TEvaSet;
  end if;

  TNetSup = TCon;
  QEva_flow = max(loadTable.y[1],0);

  connect(actPro.port_a, spl2[1].port_3)
    annotation (Line(points={{0,-10},{0,-10},{0,-50}}, color={0,127,255}));
  connect(actPro.port_b, spl1[1].port_3)
    annotation (Line(points={{0,10},{0,10},{0,50}}, color={0,127,255}));
  connect(QFlow_table.y, actPro.QEva_in)
    annotation (Line(points={{-19,0},{-8,0}}, color={0,0,127}));
  connect(TCon_exp.y, actPro.TCon_in) annotation (Line(points={{-19,20},{-14,20},
          {-14,6},{-8,6}}, color={0,0,127}));
  connect(TEva_exp.y, actPro.TEva_in) annotation (Line(points={{-19,-20},{-14,-20},
          {-14,-6},{-8,-6}}, color={0,0,127}));
  connect(actPro.QEva_flow_out, QEva_flow_out) annotation (Line(points={{11,6},{20,6},
          {20,40},{110,40}}, color={0,0,127}));
  connect(actPro.P_out, P_out)
    annotation (Line(points={{11,0},{110,0}}, color={0,0,127}));
  connect(actPro.QCon_flow_out, QCon_flow_out) annotation (Line(points={{11,-6},
          {20,-6},{20,-40},{110,-40}}, color={0,0,127}));
  connect(actPro.dp_out, dp_out) annotation (Line(points={{-6,11},{-6,46},{40,
          46},{40,110}}, color={0,0,127}));
  annotation (defaultComponentName="actPro", Icon(graphics={
        Rectangle(
          extent={{-25,-6},{25,6}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={255,0,0},
          fillPattern=FillPattern.Solid,
          origin={0,25},
          rotation=90),
        Rectangle(
          extent={{-25,6},{25,-6}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={0,0,255},
          fillPattern=FillPattern.Solid,
          origin={0,-25},
          rotation=90),
        Rectangle(
          extent={{-50,40},{50,-40}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={95,95,95},
          fillPattern=FillPattern.Solid),
                                Text(
          extent={{-50,40},{50,-40}},
          lineColor={0,0,0},
          textString="AP")}),
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
            100}})));
end DH_PrescribedHpProducer;
