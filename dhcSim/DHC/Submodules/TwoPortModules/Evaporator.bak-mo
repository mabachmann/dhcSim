within dhcSim.DHC.Submodules.TwoPortModules;
model Evaporator
  "Two port evaporator model. Port_a is considered the warm, port_b is considered the cold side"
  extends Buildings.Fluid.Interfaces.PartialTwoPortInterface;
  extends Buildings.Fluid.Interfaces.TwoPortFlowResistanceParameters(final
      computeFlowResistance=(abs(dp_nominal) > Modelica.Constants.eps));
  extends
    dhcSim.DHC.Submodules.TwoPortModules.Interfaces.TwoPortModulesParameters(
      T_start=Medium.T_default);

  // Efficiency
  parameter Real etaCarnot_nominal(unit="1")=0.5
    "Carnot effectiveness (=COP/COP_Carnot)"
    annotation (Dialog(group="Efficiency"));
  parameter dhcSim.Fluid.Types.OutletTemperature effInpEva=dhcSim.Fluid.Types.OutletTemperature.gradient
    "Define evaporator temperature"
    annotation (Dialog(group="Efficiency"), Evaluate=True);
  parameter Modelica.SIunits.Temperature TGrad(displayUnit="K")=6
    "Temperature gradient" annotation(Dialog(group="Efficiency", enable=effInpEva
           == dhcSim.Fluid.Types.OutletTemperature.gradient));

  parameter Boolean use_Q_flow_in=false "=true to use QLoad port" annotation (Dialog(group="Thermal load"));
  parameter Modelica.SIunits.HeatFlowRate QLoad=0.0 "Constant thermal load" annotation (Dialog(group="Thermal load", enable=not use_Q_flow_in));

  Modelica.SIunits.HeatFlowRate Q_flow_abs "Absolute heat flow rate";

  CarnotMachines.Evaporator.Evaporator eva(
    redeclare final package Medium = Medium,
    final m_flow_nominal=m_flow_nominal,
    final etaCarnot_nominal=etaCarnot_nominal,
    final allowFlowReversal=allowFlowReversal,
    final m_flow_small=m_flow_small,
    final T_start=T_start,
    final energyDynamics=energyDynamics,
    final TGrad=TGrad,
    final effInpEva=effInpEva,
    final use_TCon_in=true,
    final use_Q_flow_in=true,
    final from_dp=from_dp,
    final dp_nominal=dp_nominal,
    final linearizeFlowResistance=linearizeFlowResistance,
    final deltaM=deltaM)
    annotation (Placement(transformation(extent={{-10,-10},{10,10}})));
  Modelica.Blocks.Interfaces.RealInput QLoad_in(unit="W") if use_Q_flow_in annotation (Placement(
        transformation(
        extent={{-20,-20},{20,20}},
        rotation=90,
        origin={0,-120}), iconTransformation(
        extent={{-20,-20},{20,20}},
        rotation=90,
        origin={0,-80})));
  Modelica.Blocks.Sources.RealExpression Q_in(y=Q_flow_abs) annotation (Placement(
        transformation(
        extent={{10,-10},{-10,10}},
        rotation=180,
        origin={-30,-40})));
  Modelica.Blocks.Interfaces.RealInput TCon_in(unit="K")  annotation (
      Placement(transformation(
        extent={{-20,-20},{20,20}},
        rotation=90,
        origin={-60,-120}),
                         iconTransformation(
        extent={{-20,-20},{20,20}},
        rotation=90,
        origin={-70,-80})));
  Modelica.Blocks.Interfaces.RealOutput QCon_flow_out "Condensator heat flow"
    annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={60,110})));
  Modelica.Blocks.Interfaces.RealOutput P_out "Electrical power" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={0,110})));
  Modelica.Blocks.Interfaces.RealOutput QEva_flow_out "Evaporator heat flow"
    annotation (Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=90,
        origin={-60,110})));
  Modelica.Blocks.Sources.RealExpression pressure_drop(y=dp) annotation (
      Placement(transformation(
        extent={{10,-10},{-10,10}},
        rotation=180,
        origin={70,-60})));
  Modelica.Blocks.Interfaces.RealOutput dp_out "Pressure drop" annotation (
      Placement(transformation(
        extent={{-10,-10},{10,10}},
        rotation=0,
        origin={110,-60})));
  Buildings.Fluid.FixedResistances.PressureDrop res(
    redeclare final replaceable package Medium = Medium,
    final allowFlowReversal=allowFlowReversal,
    final m_flow_nominal=m_flow_nominal,
    final show_T=show_T,
    final from_dp=from_dp,
    final dp_nominal=dp_nominal,
    final linearized=linearizeFlowResistance,
    final deltaM=deltaM)
    annotation (Placement(transformation(extent={{-60,-10},{-40,10}})));
protected
  Modelica.Blocks.Interfaces.RealInput QLoad_internal(unit="W");
  parameter Modelica.SIunits.SpecificEnthalpy deltah=cp_default*m_flow_small*
      0.01 "Small value for deltah used for regularization";
  parameter Medium.ThermodynamicState state_default=Medium.setState_pTX(
      T=Medium.T_default,
      p=Medium.p_default,
      X=Medium.X_default[1:Medium.nXi]) "Default state";
  parameter Modelica.SIunits.Density rho_default=Medium.density(state=state_default);
  parameter Modelica.SIunits.DynamicViscosity mu_default=
      Medium.dynamicViscosity(state=state_default)
    "Dynamic viscosity at nominal condition";
  parameter Modelica.SIunits.SpecificHeatCapacity cp_default=
      Medium.specificHeatCapacityCp(state=state_default)
    "Specific heat capacity at default medium state";
equation
  connect(QLoad_in, QLoad_internal);
  if not use_Q_flow_in then
    QLoad_internal = QLoad;
  end if;
  Q_flow_abs = abs(QLoad_internal);

  connect(eva.port_b, port_b)
    annotation (Line(points={{10,0},{10,0},{100,0}}, color={0,127,255}));

  connect(TCon_in, eva.TCon_in) annotation (Line(points={{-60,-120},{-60,-120},
          {-60,-66},{-60,-30},{-6,-30},{-6,-12}}, color={0,0,127}));
  connect(eva.QEva_flow_out, QEva_flow_out) annotation (Line(points={{11,-3},{
          20,-3},{20,40},{-60,40},{-60,110}}, color={0,0,127}));
  connect(eva.P_out, P_out) annotation (Line(points={{11,-6},{40,-6},{40,60},{0,
          60},{0,110}}, color={0,0,127}));
  connect(eva.QCon_flow_out, QCon_flow_out)
    annotation (Line(points={{11,-9},{60,-9},{60,110}}, color={0,0,127}));
  connect(pressure_drop.y, dp_out)
    annotation (Line(points={{81,-60},{91.5,-60},{110,-60}}, color={0,0,127}));
  connect(Q_in.y, eva.QLoad_in)
    annotation (Line(points={{-19,-40},{0,-40},{0,-12}}, color={0,0,127}));
  connect(res.port_b, eva.port_a)
    annotation (Line(points={{-40,0},{-10,0}}, color={0,127,255}));
  connect(res.port_a, port_a)
    annotation (Line(points={{-60,0},{-100,0}}, color={0,127,255}));
  annotation (defaultComponentName="HP",
    Diagram(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,
            100}})),
    Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-100},{100,100}}),
        graphics={
        Rectangle(
          extent={{-70,60},{70,-60}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={95,95,95},
          fillPattern=FillPattern.Solid),
        Rectangle(
          extent={{-100,6},{100,-6}},
          lineColor={0,0,255},
          pattern=LinePattern.None,
          fillColor={0,0,255},
          fillPattern=FillPattern.Solid),
        Rectangle(
          extent={{0,-6},{100,6}},
          lineColor={0,0,127},
          fillColor={0,0,127},
          fillPattern=FillPattern.Solid),
        Line(points={{0,100},{0,60}}, color={28,108,200}),
        Line(points={{-60,100},{-60,60}}, color={28,108,200}),
        Line(points={{60,100},{60,60}}, color={28,108,200})}));
end Evaporator;
