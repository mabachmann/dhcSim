within dhcSim.DHC.ControlSystems;
model FreeCoolingControler_hyst_delay
  "Model enables or disables free cooling using hysteresis"

  parameter Integer nPro(min=1, max=Modelica.Constants.inf) = 1 "Number of producers";
  parameter Integer[nPro] isFreeCooling(min=0, max=1) = ones(nPro) "Vector describes which producer is a free cooling producer";

  parameter Modelica.SIunits.Temperature T_upper = 273.15+3 "Ambient temperature, when free coolings is initiated";
  parameter Modelica.SIunits.Temperature T_lower = 273.15+4 "Ambient temperature, when free coolings is terminated";
  parameter Modelica.SIunits.Time t_del = 3600 "Delay of free cooling usage";
  parameter Real k(start=1, unit="1") = 1/10 "Gain value of ramp signal";

  Real[nPro] freeCool "Vector controles free cooling";

  Modelica.Blocks.Interfaces.RealInput[nPro] u
    annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));
  Modelica.Blocks.Interfaces.RealOutput[nPro] y
    annotation (Placement(transformation(extent={{100,-10},{120,10}})));
  Modelica.Blocks.Interfaces.RealInput Tamb(unit = "K")
    annotation (Placement(transformation(extent={{-140,60},{-100,100}})));

  Modelica.Blocks.Sources.RealExpression[nPro] realExpression(y=freeCool .* u)
    annotation (Placement(transformation(extent={{20,-10},{40,10}})));
  Buildings.Controls.OBC.CDL.Continuous.Hysteresis hys(
    final pre_y_start=false,
    final uLow=-T_lower,
    final uHigh=-T_upper)
    annotation (Placement(transformation(extent={{-62,70},{-42,90}})));
  Modelica.Blocks.Math.Gain gain(k=-1)
    annotation (Placement(transformation(extent={{-92,70},{-72,90}})));
  Modelica.Blocks.Logical.Timer timer
    annotation (Placement(transformation(extent={{-34,70},{-14,90}})));
  Modelica.Blocks.Logical.GreaterEqual greaterEqual
    annotation (Placement(transformation(extent={{-4,70},{16,90}})));
  Modelica.Blocks.Sources.RealExpression realExpression3(final y=t_del)
    annotation (Placement(transformation(extent={{-60,50},{-40,70}})));
  Modelica.Blocks.Logical.Timer timer1
    annotation (Placement(transformation(extent={{24,70},{44,90}})));
  Modelica.Blocks.Math.Min min
    annotation (Placement(transformation(extent={{80,64},{100,84}})));
  Modelica.Blocks.Sources.RealExpression realExpression1(final y=1)
    annotation (Placement(transformation(extent={{18,46},{38,66}})));
  Modelica.Blocks.Math.Gain gain1(final k=k)
    annotation (Placement(transformation(extent={{52,70},{72,90}})));
equation

  //freeCool = fill(min.y, nPro);

  for i in 1:nPro loop
    if isFreeCooling[i]==0 then
      freeCool[i] = 1;
    else
      freeCool[i] = min.y;
    end if;
  end for;

  connect(realExpression.y, y)
    annotation (Line(points={{41,0},{110,0}}, color={0,0,127}));
  connect(Tamb, gain.u)
    annotation (Line(points={{-120,80},{-94,80}}, color={0,0,127}));
  connect(gain.y, hys.u)
    annotation (Line(points={{-71,80},{-64,80}}, color={0,0,127}));
  connect(hys.y, timer.u)
    annotation (Line(points={{-40,80},{-36,80}}, color={255,0,255}));
  connect(timer.y, greaterEqual.u1)
    annotation (Line(points={{-13,80},{-6,80}},color={0,0,127}));
  connect(realExpression3.y, greaterEqual.u2) annotation (Line(points={{-39,60},
          {-12,60},{-12,72},{-6,72}},
                                color={0,0,127}));
  connect(greaterEqual.y, timer1.u)
    annotation (Line(points={{17,80},{22,80}}, color={255,0,255}));
  connect(realExpression1.y, min.u2) annotation (Line(points={{39,56},{62,56},{62,
          68},{78,68}}, color={0,0,127}));
  connect(timer1.y, gain1.u)
    annotation (Line(points={{45,80},{50,80}}, color={0,0,127}));
  connect(gain1.y, min.u1)
    annotation (Line(points={{73,80},{78,80}}, color={0,0,127}));
  annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={
        Rectangle(
          extent={{-100,100},{100,-100}},
          lineColor={0,0,0},
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid),
        Ellipse(
          extent={{-60,88},{60,-32}},
          lineColor={28,108,200},
          fillColor={28,108,200},
          fillPattern=FillPattern.Solid),
        Line(
          points={{0,86},{0,-28}},
          color={255,255,255},
          thickness=0.5),
        Line(
          points={{0,57},{0,-57}},
          color={255,255,255},
          thickness=0.5,
          origin={0,29},
          rotation=90),
        Line(
          points={{-39,42},{37,-40}},
          color={255,255,255},
          thickness=0.5,
          origin={0,29},
          rotation=90),
        Line(
          points={{-39,42},{37,-40}},
          color={255,255,255},
          thickness=0.5,
          origin={0,29},
          rotation=180),
        Text(
          extent={{-88,-42},{86,-94}},
          lineColor={0,0,0},
          lineThickness=0.5,
          fillColor={255,255,255},
          fillPattern=FillPattern.Solid,
          textString="FreeCoolCtrl")}),                          Diagram(
        coordinateSystem(preserveAspectRatio=false)));
end FreeCoolingControler_hyst_delay;
