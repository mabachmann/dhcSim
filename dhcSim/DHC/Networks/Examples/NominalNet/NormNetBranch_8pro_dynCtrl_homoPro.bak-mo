within dhcSim.DHC.Networks.Examples.NominalNet;
model NormNetBranch_8pro_dynCtrl_homoPro
  "Example of a norminal district heating branched network using 8 producer; producer are controlled dynamicly"
  import gp = dhcSim.Utilities.getAbsolutePath;
  extends dhcSim.DHC.Networks.BaseClasses.BaseGrid(
    p_start={3e5,3e5},
    T_start={TSup,TRet},
    nLev=2,
    nMix=2,
    nPip=62,
    redeclare Submodules.MultiPortModules.Pipe.AdiabatePipe pipe,
    tau=10,
    MixNPrt={1,1},
    pAbs=9e5,
    dpType=dhcSim.DHC.Submodules.TwoPortModules.Pipe.Types.dpTypes.lengthDiameter,
    diameter=diameter_input,
    m_flow_nominal_pip=m_flow_nominal_pip_input,
    length={97.6,165.4,98.6,13.4,60.6,33.9,60.6,29.8,27.7,103.8,20.6,58.6,18.5,
        137.7,27.7,14.4,111.,29.8,128.4,170.6,194.2,30.8,88.4,98.6,154.1,194.2,
        112.,28.8,68.8,124.3,174.7,53.4,38.,66.8,191.1,77.1,168.5,91.5,158.2,
        159.3,168.5,54.5,135.6,31.9,44.2,59.6,110.,85.3,71.9,144.9,114.1,115.1,
        119.2,39.,116.1,138.7,38.,166.5,164.4,173.7,49.3,100.7},
    roughness=1.0e-5);

  parameter Modelica.SIunits.Length[nPip, nLev] diameter_input = transpose(fill(
  {0.036,  0.036,  0.0419, 0.0419, 0.0539, 0.0697, 0.0697, 0.0825, 0.0825, 0.1071,
    0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071,
    0.1071, 0.1071, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325,
    0.1325, 0.1603, 0.1603, 0.1603, 0.1603, 0.1603, 0.1603, 0.1603, 0.1325, 0.1325,
    0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325, 0.1325,
    0.1325, 0.1071, 0.1071, 0.1071, 0.1071, 0.1071, 0.0825, 0.0825, 0.0825, 0.0697,
    0.0419, 0.0273}, nLev)) "Input parameter diameter";

  parameter Modelica.SIunits.MassFlowRate[nPip, nLev]  m_flow_nominal_pip_input = transpose(fill(
  {0.556,  0.556,  0.833,  0.833,  1.528,  3.056,  3.056,  4.583,  4.583,  9.167,
   9.167,  9.167,  9.167,  9.167,  9.167,  9.167,  9.167,  9.167,  9.167,  9.167,
   9.167,  9.167, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111,
   16.111, 26.389, 26.389, 26.389, 26.389, 26.389, 26.389, 26.389, 16.111, 16.111,
   16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111, 16.111,
   16.111,  9.167,  9.167,  9.167,  9.167,  9.167,  4.583, 4.583,  4.583,  3.056,
    0.833,  0.278}, nLev)) "Input parameter nominal mass flow rate of pipes";

  parameter Modelica.SIunits.Temperature TSup = 273.15+65 "Nominal supply temperature";
  parameter Modelica.SIunits.Temperature TRet = 273.15+40 "Nominal return temperature";

  // producer and consumer:
  parameter Integer nProCen = 1 "Number of central producers";
  parameter Integer nProDec = 7 "Number of decentral producers";

  parameter Integer nCon = 64 "Number of consumer";
parameter String[nCon] fileNameCon = {gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_1.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_2.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_3.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_4.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_5.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_6.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_7.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_8.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_9.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_10.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_11.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_12.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_13.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_14.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_15.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_16.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_17.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_18.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_19.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_20.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_21.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_22.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_23.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_24.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_25.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_26.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_27.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_28.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_29.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_30.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_31.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_32.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_33.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_34.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_35.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_36.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_37.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_38.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_39.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_40.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_41.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_42.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_43.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_44.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_45.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_46.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_47.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_48.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_49.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_50.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_51.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_52.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_53.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_54.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_55.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_56.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_57.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_58.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_59.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_60.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_61.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_62.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_63.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/dynamic/con_64.txt")} "location of consumer profiles";

  /*parameter String[nCon] fileNameCon = {gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_1.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_2.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_3.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_4.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_5.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_6.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_7.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_8.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_9.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_10.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_11.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_12.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_13.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_14.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_15.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_16.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_17.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_18.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_19.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_20.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_21.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_22.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_23.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_24.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_25.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_26.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_27.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_28.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_29.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_30.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_31.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_32.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_33.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_34.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_35.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_36.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_37.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_38.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_39.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_40.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_41.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_42.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_43.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_44.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_45.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_46.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_47.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_48.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_49.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_50.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_51.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_52.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_53.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_54.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_55.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_56.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_57.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_58.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_59.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_60.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_61.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_62.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_63.txt"),
                                        gp("modelica://dhcSim/Resources/LoadProf/NomNet/steadyState/con_64.txt")} "location of consumer profiles";*/

  Submodules.MultiPortModules.DistrictHeating.Producer.DH_ActiveDirectProducer[
    nProCen] proCen(
    each nLev=2,
    each p_start=p_start,
    each T_start=T_start,
    each iLev1=1,
    each iLev2=2,
    use_T_sup_in=false,
    redeclare each package Medium = Medium,
    each TNetSupSet(displayUnit="degC") = TSup,
    each TNetRetSet(displayUnit="degC") = TRet,
    each dp_nominal=5e4,
    each m_flow_nominal=32)
    annotation (Placement(transformation(extent={{-54,12},{-34,32}})));
  Submodules.MultiPortModules.DistrictHeating.Consumer.DH_DirectConsumer[nCon]
    con(
    each nLev=2,
    each p_start=p_start,
    each T_start=T_start,
    each iLev1=1,
    each iLev2=2,
    fileName=fileNameCon,
    redeclare each package Medium = Medium,
    each TGradHX(displayUnit="K") = 2,
    each m_flow_nominal=1,
    redeclare dhcSim.Data.SysTemp_75_65_20 sysTem,
    each use_HeatingCurve=false,
    each TNetRetSet(displayUnit="K") = TRet,
    each dp_nominal=5e4)
    annotation (Placement(transformation(extent={{30,12},{50,32}})));
  Modelica.Blocks.Sources.RealExpression realExpression1(y=350000)
    annotation (Placement(transformation(extent={{-100,20},{-80,40}})));
  Submodules.MultiPortModules.DistrictHeating.Producer.DH_PrescribedDirectProducer[nProDec]
    proDec(
    redeclare package Medium = Medium,
    each nLev=2,
    each iLev1=1,
    each iLev2=2,
    use_T_sup_in=false,
    each TNetSupSet=TSup,
    each use_ProCtrl=true,
    each p_start=p_start,
    each T_start=T_start,
    each Q_flow_nominal=142000,
    each m_flow_nominal=1.36,
    each dp_nominal=5e4)
    annotation (Placement(transformation(extent={{-12,12},{8,32}})));

  ControlSystems.decentralNetController decentralNetController(nPro=nProDec,
    controllerType=Modelica.Blocks.Types.SimpleController.PID,
  y_reset=1,
  m_flow_nominal=22.15,
    ctrlOffset=0.01,
    reset=dhcSim.Types.Reset.Disabled,
  seq={1,2,3,4,5,6,7},
    y_start=1,
    initType=Modelica.Blocks.Types.InitPID.NoInit,
    sign_inp=-1,
    ctrlType=dhcSim.DHC.ControlSystems.Types.ControlerTypes.sequence)
    annotation (Placement(transformation(extent={{-40,50},{-20,70}})));
equation

    // Grid connections
    for i in 1:nLev loop
      connect(mix[1].ports[i, 1], con[8].ports_a[i]);
    connect(con[8].ports_b[i], pipe[1].ports_a[i]);
    connect(pipe[1].ports_b[i], proDec[5].ports_a[i]);
    connect(proDec[5].ports_b[i], pipe[2].ports_a[i]);
    connect(pipe[2].ports_b[i], con[7].ports_a[i]);
    connect(con[7].ports_b[i], pipe[3].ports_a[i]);
    connect(pipe[3].ports_b[i], con[6].ports_a[i]);
    connect(con[6].ports_b[i], pipe[4].ports_a[i]);
    connect(pipe[4].ports_b[i], con[5].ports_a[i]);
    connect(con[5].ports_b[i], pipe[5].ports_a[i]);
    connect(pipe[5].ports_b[i], con[4].ports_a[i]);
    connect(con[4].ports_b[i], pipe[6].ports_a[i]);
    connect(pipe[6].ports_b[i], con[3].ports_a[i]);
    connect(con[3].ports_b[i], pipe[7].ports_a[i]);
    connect(pipe[7].ports_b[i], con[2].ports_a[i]);
    connect(con[2].ports_b[i], pipe[8].ports_a[i]);
    connect(pipe[8].ports_b[i], proDec[4].ports_a[i]);
      connect(proDec[4].ports_b[i], con[1].ports_a[i]);
    connect(con[1].ports_b[i], pipe[9].ports_a[i]);
    connect(pipe[9].ports_b[i], con[9].ports_a[i]);
    connect(con[9].ports_b[i], pipe[10].ports_a[i]);
    connect(pipe[10].ports_b[i], con[10].ports_a[i]);
    connect(con[10].ports_b[i], pipe[11].ports_a[i]);
    connect(pipe[11].ports_b[i], con[11].ports_a[i]);
    connect(con[11].ports_b[i], pipe[12].ports_a[i]);
    connect(pipe[12].ports_b[i], con[12].ports_a[i]);
    connect(con[12].ports_b[i], pipe[13].ports_a[i]);
    connect(pipe[13].ports_b[i], con[13].ports_a[i]);
    connect(con[13].ports_b[i], pipe[14].ports_a[i]);
    connect(pipe[14].ports_b[i], con[14].ports_a[i]);
    connect(con[14].ports_b[i], pipe[15].ports_a[i]);
    connect(pipe[15].ports_b[i], proDec[1].ports_a[i]);
    connect(proDec[1].ports_b[i], pipe[16].ports_a[i]);
    connect(pipe[16].ports_b[i], con[15].ports_a[i]);
    connect(con[15].ports_b[i], pipe[17].ports_a[i]);
    connect(pipe[17].ports_b[i], con[16].ports_a[i]);
    connect(con[16].ports_b[i], pipe[18].ports_a[i]);
    connect(pipe[18].ports_b[i], con[24].ports_a[i]);
    connect(con[24].ports_b[i], pipe[19].ports_a[i]);
    connect(pipe[19].ports_b[i], con[23].ports_a[i]);
    connect(con[23].ports_b[i], pipe[20].ports_a[i]);
    connect(pipe[20].ports_b[i], con[22].ports_a[i]);
    connect(con[22].ports_b[i], pipe[21].ports_a[i]);
    connect(pipe[21].ports_b[i], con[21].ports_a[i]);
    connect(con[21].ports_b[i], pipe[22].ports_a[i]);
    connect(pipe[22].ports_b[i], con[20].ports_a[i]);
    connect(con[20].ports_b[i], pipe[23].ports_a[i]);
    connect(pipe[23].ports_b[i], con[19].ports_a[i]);
    connect(con[19].ports_b[i], pipe[24].ports_a[i]);
    connect(pipe[24].ports_b[i], proDec[6].ports_a[i]);
    connect(proDec[6].ports_b[i], pipe[25].ports_a[i]);
    connect(pipe[25].ports_b[i], con[18].ports_a[i]);
    connect(con[18].ports_b[i], pipe[26].ports_a[i]);
    connect(pipe[26].ports_b[i], con[17].ports_a[i]);
    connect(con[17].ports_b[i], pipe[27].ports_a[i]);
    connect(pipe[27].ports_b[i], con[25].ports_a[i]);
    connect(con[25].ports_b[i], pipe[28].ports_a[i]);
    connect(pipe[28].ports_b[i], con[26].ports_a[i]);
    connect(con[26].ports_b[i], pipe[29].ports_a[i]);
    connect(pipe[29].ports_b[i], con[27].ports_a[i]);
    connect(con[27].ports_b[i], pipe[30].ports_a[i]);
    connect(pipe[30].ports_b[i], con[28].ports_a[i]);
    connect(con[28].ports_b[i], pipe[31].ports_a[i]);
    connect(pipe[31].ports_b[i], proCen[1].ports_a[i]);
    connect(proCen[1].ports_b[i], pipe[32].ports_a[i]);
    connect(pipe[32].ports_b[i], con[29].ports_a[i]);
    connect(con[29].ports_b[i], pipe[33].ports_a[i]);
    connect(pipe[33].ports_b[i], con[30].ports_a[i]);
    connect(con[30].ports_b[i], pipe[34].ports_a[i]);
    connect(pipe[34].ports_b[i], con[31].ports_a[i]);
    connect(con[31].ports_b[i], pipe[35].ports_a[i]);
    connect(pipe[35].ports_b[i], proDec[7].ports_a[i]);
      connect(proDec[7].ports_b[i], con[32].ports_a[i]);
    connect(con[32].ports_b[i], pipe[36].ports_a[i]);
    connect(pipe[36].ports_b[i], con[40].ports_a[i]);
    connect(con[40].ports_b[i], pipe[37].ports_a[i]);
    connect(pipe[37].ports_b[i], con[39].ports_a[i]);
    connect(con[39].ports_b[i], pipe[38].ports_a[i]);
    connect(pipe[38].ports_b[i], con[38].ports_a[i]);
    connect(con[38].ports_b[i], pipe[39].ports_a[i]);
    connect(pipe[39].ports_b[i], con[37].ports_a[i]);
    connect(con[37].ports_b[i], pipe[40].ports_a[i]);
    connect(pipe[40].ports_b[i], con[36].ports_a[i]);
    connect(con[36].ports_b[i], pipe[41].ports_a[i]);
    connect(pipe[41].ports_b[i], con[35].ports_a[i]);
    connect(con[35].ports_b[i], pipe[42].ports_a[i]);
    connect(pipe[42].ports_b[i], con[34].ports_a[i]);
    connect(con[34].ports_b[i], pipe[43].ports_a[i]);
    connect(pipe[43].ports_b[i], con[33].ports_a[i]);
    connect(con[33].ports_b[i], pipe[44].ports_a[i]);
    connect(pipe[44].ports_b[i], con[41].ports_a[i]);
    connect(con[41].ports_b[i], pipe[45].ports_a[i]);
    connect(pipe[45].ports_b[i], con[42].ports_a[i]);
    connect(con[42].ports_b[i], pipe[46].ports_a[i]);
    connect(pipe[46].ports_b[i], proDec[2].ports_a[i]);
    connect(proDec[2].ports_b[i], pipe[47].ports_a[i]);
    connect(pipe[47].ports_b[i], con[43].ports_a[i]);
    connect(con[43].ports_b[i], pipe[48].ports_a[i]);
    connect(pipe[48].ports_b[i], con[44].ports_a[i]);
    connect(con[44].ports_b[i], pipe[49].ports_a[i]);
    connect(pipe[49].ports_b[i], con[45].ports_a[i]);
    connect(con[45].ports_b[i], pipe[50].ports_a[i]);
    connect(pipe[50].ports_b[i], con[46].ports_a[i]);
    connect(con[46].ports_b[i], pipe[51].ports_a[i]);
    connect(pipe[51].ports_b[i], con[47].ports_a[i]);
    connect(con[47].ports_b[i], pipe[52].ports_a[i]);
    connect(pipe[52].ports_b[i], con[48].ports_a[i]);
    connect(con[48].ports_b[i], pipe[53].ports_a[i]);
    connect(pipe[53].ports_b[i], con[56].ports_a[i]);
    connect(con[56].ports_b[i], pipe[54].ports_a[i]);
    connect(pipe[54].ports_b[i], proDec[3].ports_a[i]);
      connect(proDec[3].ports_b[i], con[64].ports_a[i]);
    connect(con[64].ports_b[i], pipe[55].ports_a[i]);
    connect(pipe[55].ports_b[i], con[55].ports_a[i]);
      connect(con[55].ports_b[i], con[63].ports_a[i]);
    connect(con[63].ports_b[i], pipe[56].ports_a[i]);
    connect(pipe[56].ports_b[i], con[54].ports_a[i]);
      connect(con[54].ports_b[i], con[62].ports_a[i]);
    connect(con[62].ports_b[i], pipe[57].ports_a[i]);
    connect(pipe[57].ports_b[i], con[53].ports_a[i]);
      connect(con[53].ports_b[i], con[61].ports_a[i]);
    connect(con[61].ports_b[i], pipe[58].ports_a[i]);
    connect(pipe[58].ports_b[i], con[52].ports_a[i]);
      connect(con[52].ports_b[i], con[60].ports_a[i]);
    connect(con[60].ports_b[i], pipe[59].ports_a[i]);
    connect(pipe[59].ports_b[i], con[51].ports_a[i]);
      connect(con[51].ports_b[i], con[59].ports_a[i]);
    connect(con[59].ports_b[i], pipe[60].ports_a[i]);
    connect(pipe[60].ports_b[i], con[50].ports_a[i]);
      connect(con[50].ports_b[i], con[58].ports_a[i]);
    connect(con[58].ports_b[i], pipe[61].ports_a[i]);
    connect(pipe[61].ports_b[i], con[57].ports_a[i]);
    connect(con[57].ports_b[i], pipe[62].ports_a[i]);
    connect(pipe[62].ports_b[i], con[49].ports_a[i]);
      connect(con[49].ports_b[i], mix[2].ports[i, 1]);
    end for;

    // Pressure point
  connect(expansionVessel.port_a, proCen[1].ports_a[1]);

   // Differential pressure of producer:
   for i in 1:nProCen loop
     connect(realExpression1.y, proCen[i].dp_in) annotation (Line(points={{-79,30},
            {-56,30}},                                                                     color={0,0,127}));
   end for;

   for i in 1:nProDec loop
   end for;

connect(proCen[1].m_flow_out, decentralNetController.m_flow_input)
  annotation (Line(points={{-45,31},{-45,60},{-42,60}}, color={0,0,127}));
connect(decentralNetController.ProCtrl_out, proDec.ProCtrl_in) annotation (
    Line(points={{-19,60},{-16,60},{-16,0},{-6,0},{-6,10}}, color={0,0,127}));
   annotation (Line(points={{-10,-120},{
          -10,-130},{70,-130},{70,-120}}, color={0,127,255}),
              experiment(StopTime=31536000, Interval=900),
    Diagram(graphics={
        Line(points={{10,-50},{20,-50},{20,-60},{40,-60},{40,-58},{40,-60},{60,-60},
              {60,22},{50,22}}, color={28,108,200}),
        Line(points={{30,22},{8,22}},   color={28,108,200}),
        Line(points={{-12,22},{-34,22}},color={28,108,200}),
        Line(points={{-54,22},{-64,22},{-64,-60},{-40,-60},{-40,-58},{-40,-60},{
              -20,-60},{-20,-50},{-10,-50}}, color={28,108,200})}));
end NormNetBranch_8pro_dynCtrl_homoPro;
